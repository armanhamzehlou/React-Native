{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _excluded = [\"onContextCreate\", \"onContextRestored\", \"onContextLost\", \"webglContextAttributes\", \"msaaSamples\", \"nativeRef_EXPERIMENTAL\", \"ref\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { CodedError, Platform, UnavailabilityError } from 'expo-modules-core';\nimport invariant from 'invariant';\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Canvas from \"./Canvas\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getImageForAsset(asset) {\n  if (asset != null && typeof asset === 'object' && asset.downloadAsync) {\n    var dataURI = asset.localUri || asset.uri || '';\n    var image = new Image();\n    image.src = dataURI;\n    return image;\n  }\n  return asset;\n}\nfunction isOffscreenCanvas(element) {\n  return element && typeof element.convertToBlob === 'function';\n}\nfunction asExpoContext(gl) {\n  gl.endFrameEXP = function glEndFrameEXP() {};\n  if (!gl['_expo_texImage2D']) {\n    gl['_expo_texImage2D'] = gl.texImage2D;\n    gl.texImage2D = function () {\n      for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n        props[_key] = arguments[_key];\n      }\n      var nextProps = [].concat(props);\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texImage2D'].apply(gl, _toConsumableArray(nextProps));\n    };\n  }\n  if (!gl['_expo_texSubImage2D']) {\n    gl['_expo_texSubImage2D'] = gl.texSubImage2D;\n    gl.texSubImage2D = function () {\n      for (var _len2 = arguments.length, props = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        props[_key2] = arguments[_key2];\n      }\n      var nextProps = [].concat(props);\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texSubImage2D'].apply(gl, _toConsumableArray(nextProps));\n    };\n  }\n  return gl;\n}\nfunction ensureContext(canvas, contextAttributes) {\n  if (!canvas) {\n    throw new CodedError('ERR_GL_INVALID', 'Attempting to use the GL context before it has been created.');\n  }\n  var isIOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n  var context = !isIOS && canvas.getContext('webgl2', contextAttributes) || canvas.getContext('webgl', contextAttributes) || canvas.getContext('webgl-experimental', contextAttributes) || canvas.getContext('experimental-webgl', contextAttributes);\n  invariant(context, 'Browser does not support WebGL');\n  return asExpoContext(context);\n}\nfunction getBlobFromWebGLRenderingContext(_x) {\n  return _getBlobFromWebGLRenderingContext.apply(this, arguments);\n}\nfunction _getBlobFromWebGLRenderingContext() {\n  _getBlobFromWebGLRenderingContext = _asyncToGenerator(function* (gl) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    invariant(gl, 'getBlobFromWebGLRenderingContext(): WebGL Rendering Context is not defined');\n    var canvas = gl.canvas;\n    var blob = null;\n    if (typeof canvas.msToBlob === 'function') {\n      blob = yield canvas.msToBlob();\n    } else if (isOffscreenCanvas(canvas)) {\n      blob = yield canvas.convertToBlob({\n        quality: options.compress,\n        type: options.format\n      });\n    } else {\n      blob = yield new Promise(function (resolve) {\n        canvas.toBlob(function (blob) {\n          return resolve(blob);\n        }, options.format, options.compress);\n      });\n    }\n    return {\n      blob: blob,\n      width: canvas.width,\n      height: canvas.height\n    };\n  });\n  return _getBlobFromWebGLRenderingContext.apply(this, arguments);\n}\nexport var GLView = function (_React$Component) {\n  _inherits(GLView, _React$Component);\n  function GLView() {\n    var _this;\n    _classCallCheck(this, GLView);\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    _this = _callSuper(this, GLView, [].concat(args));\n    _this.onContextLost = function (event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      _this.gl = undefined;\n      if (typeof _this.props.onContextLost === 'function') {\n        _this.props.onContextLost();\n      }\n    };\n    _this.onContextRestored = function () {\n      _this.gl = undefined;\n      if (_this.getGLContext() == null) {\n        throw new CodedError('ERR_GL_INVALID', 'Failed to restore GL context.');\n      }\n    };\n    _this.setCanvasRef = function (canvas) {\n      _this.canvas = canvas;\n      if (typeof _this.props.nativeRef_EXPERIMENTAL === 'function') {\n        _this.props.nativeRef_EXPERIMENTAL(canvas);\n      }\n      if (_this.canvas) {\n        _this.canvas.addEventListener('webglcontextlost', _this.onContextLost);\n        _this.canvas.addEventListener('webglcontextrestored', _this.onContextRestored);\n        _this.getGLContext();\n      }\n    };\n    return _this;\n  }\n  _createClass(GLView, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.gl) {\n        var loseContextExt = this.gl.getExtension('WEBGL_lose_context');\n        if (loseContextExt) {\n          loseContextExt.loseContext();\n        }\n        this.gl = undefined;\n      }\n      if (this.canvas) {\n        this.canvas.removeEventListener('webglcontextlost', this.onContextLost);\n        this.canvas.removeEventListener('webglcontextrestored', this.onContextRestored);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        onContextCreate = _this$props.onContextCreate,\n        onContextRestored = _this$props.onContextRestored,\n        onContextLost = _this$props.onContextLost,\n        webglContextAttributes = _this$props.webglContextAttributes,\n        msaaSamples = _this$props.msaaSamples,\n        nativeRef_EXPERIMENTAL = _this$props.nativeRef_EXPERIMENTAL,\n        ref = _this$props.ref,\n        domProps = _objectWithoutProperties(_this$props, _excluded);\n      return _jsx(Canvas, _objectSpread(_objectSpread({}, domProps), {}, {\n        canvasRef: this.setCanvasRef\n      }));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var webglContextAttributes = this.props.webglContextAttributes;\n      if (this.canvas && webglContextAttributes !== prevProps.webglContextAttributes) {\n        this.onContextLost(null);\n        this.onContextRestored();\n      }\n    }\n  }, {\n    key: \"getGLContextOrReject\",\n    value: function getGLContextOrReject() {\n      var gl = this.getGLContext();\n      if (!gl) {\n        throw new CodedError('ERR_GL_INVALID', 'Attempting to use the GL context before it has been created.');\n      }\n      return gl;\n    }\n  }, {\n    key: \"getGLContext\",\n    value: function getGLContext() {\n      if (this.gl) return this.gl;\n      if (this.canvas) {\n        this.gl = ensureContext(this.canvas, this.props.webglContextAttributes);\n        if (typeof this.props.onContextCreate === 'function') {\n          this.props.onContextCreate(this.gl);\n        }\n        return this.gl;\n      }\n      return null;\n    }\n  }, {\n    key: \"takeSnapshotAsync\",\n    value: function () {\n      var _takeSnapshotAsync = _asyncToGenerator(function* () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (!GLView.takeSnapshotAsync) {\n          throw new UnavailabilityError('expo-gl', 'takeSnapshotAsync');\n        }\n        var gl = this.getGLContextOrReject();\n        return yield GLView.takeSnapshotAsync(gl, options);\n      });\n      function takeSnapshotAsync() {\n        return _takeSnapshotAsync.apply(this, arguments);\n      }\n      return takeSnapshotAsync;\n    }()\n  }, {\n    key: \"startARSessionAsync\",\n    value: function () {\n      var _startARSessionAsync = _asyncToGenerator(function* () {\n        throw new UnavailabilityError('GLView', 'startARSessionAsync');\n      });\n      function startARSessionAsync() {\n        return _startARSessionAsync.apply(this, arguments);\n      }\n      return startARSessionAsync;\n    }()\n  }, {\n    key: \"createCameraTextureAsync\",\n    value: function () {\n      var _createCameraTextureAsync = _asyncToGenerator(function* () {\n        throw new UnavailabilityError('GLView', 'createCameraTextureAsync');\n      });\n      function createCameraTextureAsync() {\n        return _createCameraTextureAsync.apply(this, arguments);\n      }\n      return createCameraTextureAsync;\n    }()\n  }, {\n    key: \"destroyObjectAsync\",\n    value: function () {\n      var _destroyObjectAsync = _asyncToGenerator(function* (glObject) {\n        throw new UnavailabilityError('GLView', 'destroyObjectAsync');\n      });\n      function destroyObjectAsync(_x2) {\n        return _destroyObjectAsync.apply(this, arguments);\n      }\n      return destroyObjectAsync;\n    }()\n  }], [{\n    key: \"createContextAsync\",\n    value: function () {\n      var _createContextAsync = _asyncToGenerator(function* () {\n        if (!Platform.isDOMAvailable) {\n          return null;\n        }\n        var canvas = document.createElement('canvas');\n        var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          scale = _Dimensions$get.scale;\n        canvas.width = width * scale;\n        canvas.height = height * scale;\n        return ensureContext(canvas);\n      });\n      function createContextAsync() {\n        return _createContextAsync.apply(this, arguments);\n      }\n      return createContextAsync;\n    }()\n  }, {\n    key: \"destroyContextAsync\",\n    value: function () {\n      var _destroyContextAsync = _asyncToGenerator(function* (exgl) {\n        return true;\n      });\n      function destroyContextAsync(_x3) {\n        return _destroyContextAsync.apply(this, arguments);\n      }\n      return destroyContextAsync;\n    }()\n  }, {\n    key: \"takeSnapshotAsync\",\n    value: function () {\n      var _takeSnapshotAsync2 = _asyncToGenerator(function* (gl) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var _yield$getBlobFromWeb = yield getBlobFromWebGLRenderingContext(gl, options),\n          blob = _yield$getBlobFromWeb.blob,\n          width = _yield$getBlobFromWeb.width,\n          height = _yield$getBlobFromWeb.height;\n        if (!blob) {\n          throw new CodedError('ERR_GL_SNAPSHOT', 'Failed to save the GL context');\n        }\n        return {\n          uri: blob,\n          localUri: '',\n          width: width,\n          height: height\n        };\n      });\n      function takeSnapshotAsync(_x4) {\n        return _takeSnapshotAsync2.apply(this, arguments);\n      }\n      return takeSnapshotAsync;\n    }()\n  }]);\n  return GLView;\n}(React.Component);","map":{"version":3,"names":["CodedError","Platform","UnavailabilityError","invariant","React","Dimensions","Canvas","jsx","_jsx","getImageForAsset","asset","downloadAsync","dataURI","localUri","uri","image","Image","src","isOffscreenCanvas","element","convertToBlob","asExpoContext","gl","endFrameEXP","glEndFrameEXP","texImage2D","_len","arguments","length","props","Array","_key","nextProps","concat","push","pop","apply","_toConsumableArray","texSubImage2D","_len2","_key2","ensureContext","canvas","contextAttributes","isIOS","navigator","platform","test","context","getContext","getBlobFromWebGLRenderingContext","_x","_getBlobFromWebGLRenderingContext","_asyncToGenerator","options","undefined","blob","msToBlob","quality","compress","type","format","Promise","resolve","toBlob","width","height","GLView","_React$Component","_inherits","_this","_classCallCheck","_len3","args","_key3","_callSuper","onContextLost","event","preventDefault","onContextRestored","getGLContext","setCanvasRef","nativeRef_EXPERIMENTAL","addEventListener","_createClass","key","value","componentWillUnmount","loseContextExt","getExtension","loseContext","removeEventListener","render","_this$props","onContextCreate","webglContextAttributes","msaaSamples","ref","domProps","_objectWithoutProperties","_excluded","_objectSpread","canvasRef","componentDidUpdate","prevProps","getGLContextOrReject","_takeSnapshotAsync","takeSnapshotAsync","_startARSessionAsync","startARSessionAsync","_createCameraTextureAsync","createCameraTextureAsync","_destroyObjectAsync","glObject","destroyObjectAsync","_x2","_createContextAsync","isDOMAvailable","document","createElement","_Dimensions$get","get","scale","createContextAsync","_destroyContextAsync","exgl","destroyContextAsync","_x3","_takeSnapshotAsync2","_yield$getBlobFromWeb","_x4","Component"],"sources":["/home/runner/workspace/node_modules/expo-gl/src/GLView.web.tsx"],"sourcesContent":["import { CodedError, Platform, UnavailabilityError } from 'expo-modules-core';\nimport invariant from 'invariant';\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nimport Canvas from './Canvas';\nimport { WebGLObject } from './GLView';\nimport {\n  GLViewProps,\n  ExpoWebGLRenderingContext,\n  GLSnapshot,\n  SnapshotOptions,\n  ComponentOrHandle,\n} from './GLView.types';\n\nfunction getImageForAsset(asset: {\n  downloadAsync?: () => Promise<any>;\n  uri?: string;\n  localUri?: string;\n}): HTMLImageElement | any {\n  if (asset != null && typeof asset === 'object' && asset.downloadAsync) {\n    const dataURI = asset.localUri || asset.uri || '';\n    const image = new Image();\n    image.src = dataURI;\n    return image;\n  }\n  return asset;\n}\n\nfunction isOffscreenCanvas(element: any): element is OffscreenCanvas {\n  return element && typeof element.convertToBlob === 'function';\n}\n\nfunction asExpoContext(gl: ExpoWebGLRenderingContext): WebGLRenderingContext {\n  gl.endFrameEXP = function glEndFrameEXP(): void {};\n\n  if (!gl['_expo_texImage2D']) {\n    gl['_expo_texImage2D'] = gl.texImage2D;\n    gl.texImage2D = (...props: any[]): any => {\n      const nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texImage2D'](...nextProps);\n    };\n  }\n\n  if (!gl['_expo_texSubImage2D']) {\n    gl['_expo_texSubImage2D'] = gl.texSubImage2D;\n    gl.texSubImage2D = (...props: any[]): any => {\n      const nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texSubImage2D'](...nextProps);\n    };\n  }\n\n  return gl;\n}\n\nfunction ensureContext(\n  canvas?: HTMLCanvasElement,\n  contextAttributes?: WebGLContextAttributes\n): WebGLRenderingContext {\n  if (!canvas) {\n    throw new CodedError(\n      'ERR_GL_INVALID',\n      'Attempting to use the GL context before it has been created.'\n    );\n  }\n\n  // Apple disables WebGL 2.0 and doesn't provide any way to detect if it's disabled.\n  const isIOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n\n  const context =\n    (!isIOS && canvas.getContext('webgl2', contextAttributes)) ||\n    canvas.getContext('webgl', contextAttributes) ||\n    canvas.getContext('webgl-experimental', contextAttributes) ||\n    canvas.getContext('experimental-webgl', contextAttributes);\n  invariant(context, 'Browser does not support WebGL');\n  return asExpoContext(context as ExpoWebGLRenderingContext);\n}\n\n// @needsAudit @docsMissing\nexport type GLViewWebProps = GLViewProps & {\n  onContextCreate: (gl: WebGLRenderingContext) => void;\n  onContextRestored?: (gl?: WebGLRenderingContext) => void;\n  onContextLost?: () => void;\n  webglContextAttributes?: WebGLContextAttributes;\n  // type overwrite\n  nativeRef_EXPERIMENTAL?(callback: ComponentOrHandle | HTMLCanvasElement | null);\n};\n\nasync function getBlobFromWebGLRenderingContext(\n  gl: WebGLRenderingContext,\n  options: SnapshotOptions = {}\n): Promise<{ width: number; height: number; blob: Blob | null }> {\n  invariant(gl, 'getBlobFromWebGLRenderingContext(): WebGL Rendering Context is not defined');\n\n  const { canvas } = gl;\n\n  let blob: Blob | null = null;\n\n  if (typeof (canvas as any).msToBlob === 'function') {\n    // @ts-ignore: polyfill: https://stackoverflow.com/a/29815058/4047926\n    blob = await canvas.msToBlob();\n  } else if (isOffscreenCanvas(canvas)) {\n    blob = await canvas.convertToBlob({ quality: options.compress, type: options.format });\n  } else {\n    blob = await new Promise((resolve) => {\n      canvas.toBlob((blob: Blob | null) => resolve(blob), options.format, options.compress);\n    });\n  }\n\n  return {\n    blob,\n    width: canvas.width,\n    height: canvas.height,\n  };\n}\n\nexport class GLView extends React.Component<GLViewWebProps> {\n  canvas?: HTMLCanvasElement;\n\n  gl?: WebGLRenderingContext;\n\n  static async createContextAsync(): Promise<WebGLRenderingContext | null> {\n    if (!Platform.isDOMAvailable) {\n      return null;\n    }\n    const canvas = document.createElement('canvas');\n    const { width, height, scale } = Dimensions.get('window');\n    canvas.width = width * scale;\n    canvas.height = height * scale;\n    return ensureContext(canvas);\n  }\n\n  static async destroyContextAsync(exgl?: WebGLRenderingContext | number): Promise<boolean> {\n    // Do nothing\n    return true;\n  }\n\n  static async takeSnapshotAsync(\n    gl: WebGLRenderingContext,\n    options: SnapshotOptions = {}\n  ): Promise<GLSnapshot> {\n    const { blob, width, height } = await getBlobFromWebGLRenderingContext(gl, options);\n\n    if (!blob) {\n      throw new CodedError('ERR_GL_SNAPSHOT', 'Failed to save the GL context');\n    }\n\n    return {\n      uri: blob,\n      localUri: '',\n      width,\n      height,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.gl) {\n      const loseContextExt = this.gl.getExtension('WEBGL_lose_context');\n      if (loseContextExt) {\n        loseContextExt.loseContext();\n      }\n      this.gl = undefined;\n    }\n    if (this.canvas) {\n      this.canvas.removeEventListener('webglcontextlost', this.onContextLost);\n      this.canvas.removeEventListener('webglcontextrestored', this.onContextRestored);\n    }\n  }\n\n  render() {\n    const {\n      onContextCreate,\n      onContextRestored,\n      onContextLost,\n      webglContextAttributes,\n      msaaSamples,\n      nativeRef_EXPERIMENTAL,\n      // @ts-ignore: ref does not exist\n      ref,\n      ...domProps\n    } = this.props;\n\n    return <Canvas {...domProps} canvasRef={this.setCanvasRef} />;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { webglContextAttributes } = this.props;\n    if (this.canvas && webglContextAttributes !== prevProps.webglContextAttributes) {\n      this.onContextLost(null);\n      this.onContextRestored();\n    }\n  }\n\n  private getGLContextOrReject(): WebGLRenderingContext {\n    const gl = this.getGLContext();\n    if (!gl) {\n      throw new CodedError(\n        'ERR_GL_INVALID',\n        'Attempting to use the GL context before it has been created.'\n      );\n    }\n    return gl;\n  }\n\n  private onContextLost = (event: Event | null): void => {\n    if (event && event.preventDefault) {\n      event.preventDefault();\n    }\n    this.gl = undefined;\n\n    if (typeof this.props.onContextLost === 'function') {\n      this.props.onContextLost();\n    }\n  };\n\n  private onContextRestored = (): void => {\n    this.gl = undefined;\n    if (this.getGLContext() == null) {\n      throw new CodedError('ERR_GL_INVALID', 'Failed to restore GL context.');\n    }\n  };\n\n  private getGLContext(): WebGLRenderingContext | null {\n    if (this.gl) return this.gl;\n\n    if (this.canvas) {\n      this.gl = ensureContext(this.canvas, this.props.webglContextAttributes);\n      if (typeof this.props.onContextCreate === 'function') {\n        this.props.onContextCreate(this.gl);\n      }\n      return this.gl;\n    }\n    return null;\n  }\n\n  private setCanvasRef = (canvas: HTMLCanvasElement): void => {\n    this.canvas = canvas;\n\n    if (typeof this.props.nativeRef_EXPERIMENTAL === 'function') {\n      this.props.nativeRef_EXPERIMENTAL(canvas);\n    }\n\n    if (this.canvas) {\n      this.canvas.addEventListener('webglcontextlost', this.onContextLost);\n      this.canvas.addEventListener('webglcontextrestored', this.onContextRestored);\n\n      this.getGLContext();\n    }\n  };\n\n  public async takeSnapshotAsync(options: SnapshotOptions = {}): Promise<GLSnapshot> {\n    if (!GLView.takeSnapshotAsync) {\n      throw new UnavailabilityError('expo-gl', 'takeSnapshotAsync');\n    }\n\n    const gl = this.getGLContextOrReject();\n    return await GLView.takeSnapshotAsync(gl, options);\n  }\n\n  public async startARSessionAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'startARSessionAsync');\n  }\n\n  public async createCameraTextureAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'createCameraTextureAsync');\n  }\n\n  public async destroyObjectAsync(glObject: WebGLObject): Promise<void> {\n    throw new UnavailabilityError('GLView', 'destroyObjectAsync');\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}